{"version":3,"sources":["redux/reducers/table.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","components/Head.js","redux/actions.js","components/Heads.js","components/Cell.js","components/Rows.js","components/Table.js","components/menu/AddRow.js","components/menu/AddColumn.js","components/menu/DeleteRow.js","components/menu/DeleteColumn.js","components/Menu.js","App.js","redux/selectors.js","serviceWorker.js","index.js"],"names":["initialState","head","table","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","map","item","row","push","column","obj","slice","index","number","value","number_row","number_cell","createStore","rootReducer","Head","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openItem","setState","vis","insertItem","saveItem","event","editHead","_this2","react_default","a","createElement","onClick","onKeyPress","key","onChange","e","target","React","Component","connect","Heads","_ref","className","components_Head","Cell","editCell","cell","Rows","rows","components_Cell","Table","components_Rows","addRow","addColumn","deleteRow","deleteColumn","Menu","viewRow","viewColumn","menu_AddRow","menu_DeleteRow","menu_AddColumn","menu_DeleteColumn","store","getTable","components_Menu","components_Heads","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e40aa70.chunk.js","sourcesContent":["import { ADD_ROW, ADD_COLUMN, EDIT_HEAD, EDIT_CELL, DELETE_ROW, DELETE_COLUMN } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    head:[\"Number\",\"Name\",\"Theme\",\"Exemple\"],\r\n    table:[\r\n        [\"№1\",\"First\",\"First Theme\",\"Exemple first\"],\r\n        [\"№2\",\"Second\",\"Second Theme\",\"Exemple second\"],\r\n        [\"№3\",\"Three\",\"test2\",\"test2\"],\r\n        [\"№4\",\"Four\",\"test3\",\"test3\"]\r\n    ]\r\n};\r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_ROW: {\r\n        return{\r\n          ...state,\r\n          table:[...state.table, state.table[0].map((item)=>action.row)]\r\n        }\r\n      }\r\n      case ADD_COLUMN: {\r\n        state.table.map((item)=>item.push(action.column));\r\n        return{\r\n          ...state,\r\n          head:[...state.head, action.column]\r\n        }\r\n      }\r\n      case DELETE_ROW: {\r\n        let obj = {...state}\r\n        if(obj.table.length >1){\r\n          obj.table = obj.table.slice(0,-1)\r\n        }\r\n        return obj\r\n      }\r\n      case DELETE_COLUMN: {\r\n        let obj = {...state}\r\n        obj.head = obj.head.slice(0,-1)\r\n        obj.table = obj.table.map((item)=>item.slice(0,-1));\r\n        return obj\r\n      }\r\n      case EDIT_HEAD: {\r\n        state.head = state.head.map((item,index)=>{\r\n          if(action.number === index){\r\n            return action.value\r\n          }else{\r\n            return item\r\n          }\r\n        });\r\n        return {...state};\r\n      }\r\n      case EDIT_CELL: {\r\n        state.table = state.table.map((item,index)=>{\r\n          if(action.number_row === index){\r\n            return item.map((item,index)=>{\r\n              if(action.number_cell === index){\r\n                return action.value\r\n              }else{\r\n                return item\r\n              }\r\n            })\r\n          }else{\r\n            return item\r\n          }\r\n        });\r\n        return {...state};\r\n      }\r\n      default:\r\n      return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport table from \"./table\";\r\n\r\nexport default combineReducers({table});","export const ADD_ROW = \"ADD_ROW\";\r\nexport const ADD_COLUMN = \"ADD_COLUMN\";\r\nexport const DELETE_ROW = \"DELETE_ROW\";\r\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\r\nexport const EDIT_HEAD = \"EDIT_HEAD\";\r\nexport const EDIT_CELL = \"EDIT_CELL\";","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editHead } from \"../redux/actions\";\r\n\r\nclass Head  extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { vis: false, value: this.props.item };\r\n    }\r\n    openItem = () =>{\r\n        this.setState({ vis: true })\r\n    }\r\n    insertItem = value =>{\r\n        this.setState({ value: value })\r\n    }\r\n    saveItem = event =>{\r\n        if(event === \"Enter\") {\r\n            this.setState({ vis: false })\r\n            this.props.editHead(this.state.value, this.props.number)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n        <th onClick={()=>this.openItem()}>\r\n        {this.state.vis === false?\r\n        this.props.item\r\n        :\r\n        <div><input onKeyPress={event => this.saveItem(event.key)} onChange={e => this.insertItem(e.target.value)} value={this.state.value} /></div>\r\n        }\r\n        </th>\r\n        )\r\n    }\r\n}\r\n\r\n// export default Todo;\r\nexport default connect(null, {editHead})(Head);","import { ADD_ROW, ADD_COLUMN, EDIT_HEAD, EDIT_CELL, DELETE_ROW, DELETE_COLUMN } from \"./actionTypes\";\r\n\r\nexport const addRow = row => {\r\n    return ({\r\n        type: ADD_ROW,\r\n        row: row\r\n    });\r\n}\r\n\r\nexport const addColumn = column => {\r\n    return ({\r\n        type: ADD_COLUMN,\r\n        column: column\r\n    });\r\n}\r\n\r\nexport const deleteRow = () => {\r\n   return ({\r\n        type: DELETE_ROW,\r\n    });\r\n}\r\n\r\nexport const deleteColumn = () => {\r\n    return ({\r\n        type: DELETE_COLUMN,\r\n    });\r\n}\r\n\r\nexport const editHead = (value, number) => {\r\n    return ({\r\n        type: EDIT_HEAD,\r\n        value: value,\r\n        number: number\r\n    });\r\n}\r\n\r\nexport const editCell = (value, number_row, number_cell) => {\r\n    return ({\r\n        type: EDIT_CELL,\r\n        value: value,\r\n        number_row: number_row,\r\n        number_cell: number_cell\r\n    });\r\n}","import React from \"react\";\r\nimport Head from \"./Head\";\r\n\r\nconst Heads = ({ head }) => (\r\n    <thead>\r\n        <tr>\r\n            <td className=\"nav\" ></td>\r\n            {           \r\n                head.map((item, index) => <td className=\"nav\" key = {index}>{index+1}</td>)\r\n            }\r\n        </tr>\r\n        <tr>\r\n            <td className=\"nav\">0</td>\r\n            {           \r\n                head.map((item, index) => <Head key = {index} item={item} number = {index} />)\r\n            }\r\n        </tr>\r\n    </thead>\r\n)\r\n\r\n// export default Todo;\r\nexport default Heads;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editCell } from \"../redux/actions\";\r\n\r\nclass Cell  extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { vis: false, value: this.props.cell };\r\n    }\r\n    openItem = () =>{\r\n        this.setState({ vis: true })\r\n    }\r\n    insertItem = value =>{\r\n        this.setState({ value: value })\r\n    }\r\n    saveItem = event =>{\r\n        if(event === \"Enter\") {\r\n            this.setState({ vis: false })\r\n            this.props.editCell(this.state.value, this.props.number_row, this.props.number_cell)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <td onClick={()=>this.openItem()}>\r\n            {this.state.vis === false?\r\n            this.props.cell\r\n            :\r\n            <input onKeyPress={event => this.saveItem(event.key)} onChange={e => this.insertItem(e.target.value)} value={this.state.value} />\r\n            }\r\n            </td>\r\n       )\r\n    }\r\n}\r\n\r\n// export default Todo;\r\nexport default connect(null, {editCell})(Cell);","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\nconst Rows = ({ rows, number_row }) => (\r\n        rows.map((cell, index) => <Cell key = {index} cell={cell} number_row={number_row} number_cell={index} />)\r\n);\r\n\r\n// export default Todo;\r\nexport default Rows;","import React from \"react\";\r\nimport Rows from \"./Rows\";\r\n\r\nconst Table = ({ table }) => (\r\n    table.map((rows, index) =>\r\n        <tr>\r\n            <td className=\"nav\">{index+1}</td><Rows key = {index} rows={rows} number_row={index} />\r\n        </tr>\r\n    )\r\n);\r\n\r\n// export default Todo;\r\nexport default Table;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addRow } from \"../../redux/actions\";\r\n\r\nconst AddRow = ({addRow}) => <div className=\"bar_item\" onClick={() => addRow(\"\")}>Add Row</div>\r\n\r\n// export default Todo;\r\nexport default connect(null, {addRow})(AddRow);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addColumn } from \"../../redux/actions\";\r\n\r\nconst AddColumn = ({addColumn}) => <div className=\"bar_item\" onClick={() => addColumn(\"\")}>Add Column</div>\r\n\r\n// export default Todo;\r\nexport default connect(null, {addColumn})(AddColumn);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {deleteRow} from \"../../redux/actions\";\r\n\r\nconst DeleteRow = ({deleteRow}) => <div className=\"bar_item\" onClick={() => deleteRow(\"\")}>Delete Row</div>\r\n\r\n// export default Todo;\r\nexport default connect(null, {deleteRow})(DeleteRow);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteColumn } from \"../../redux/actions\";\r\n\r\nconst DeleteColumn = ({deleteColumn}) => <div className=\"bar_item\" onClick={() => deleteColumn(\"\")}>Delete Column</div>\r\n\r\n// export default Todo;\r\nexport default connect(null, {deleteColumn})(DeleteColumn);","import React from \"react\";\r\nimport AddRow from \"./menu/AddRow\";\r\nimport AddColumn from \"./menu/AddColumn\";\r\nimport DeleteRow from \"./menu/DeleteRow\";\r\nimport DeleteColumn from \"./menu/DeleteColumn\";\r\n\r\nclass Menu  extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { row : false, column : false};\r\n    }\r\n    viewRow = () => {\r\n        this.setState({ row: !this.state.row, column: false })\r\n    }\r\n    viewColumn = () => {\r\n        this.setState({ column: !this.state.column, row: false })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"nav_item\" onClick={()=>this.viewRow()}>Row\r\n                {\r\n                    this.state.row === true?\r\n                    <div className=\"bar\"><AddRow /><DeleteRow /></div>:\"\"\r\n                }\r\n                </div>\r\n                <div className=\"nav_item\" onClick={()=>this.viewColumn()}>Column\r\n                {\r\n                    this.state.column === true?\r\n                    <div className=\"bar\"><AddColumn /><DeleteColumn /></div>:\"\"\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default Todo;\r\nexport default Menu;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport { getTable, getHead} from \"./redux/selectors\";\nimport Heads from \"./components/Heads\";\nimport Table from \"./components/Table\";\nimport Menu from \"./components/Menu\";\n\nconst ItemsList = ({ table, head}) => (\n    <div>\n    <Menu/>\n    <table>\n        <Heads head={head} />\n        <tbody><Table table={table} /></tbody>\n    </table>\n    </div>\n)\n\nconst mapStateToProps = state => {\n    const head = getHead(state)\n    const table = getTable(state)\n    return {table, head};\n}\n\nexport default connect(mapStateToProps)(ItemsList);\n","export const getHead = store => store.table.head;\r\nexport const getTable = store => store.table.table;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport './index.css';\nimport ItemsList from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Provider store={store}>\n    <ItemsList />\n</Provider>\n,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n\n// unregister() to register() below. Note this comes with some pitfalls.\n\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();"],"sourceRoot":""}